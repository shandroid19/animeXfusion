@import url("https://fonts.googleapis.com/css2?family=Inter:wght@400;600;800&display=swap");

:root {
  --bg: #0b0f14;
  --panel: rgba(255, 255, 255, 0.06);
  --panel-border: rgba(255, 255, 255, 0.12);
  --text: #e6edf3;
  --accent: #6ee7ff;
  --accent-2: #8b5cf6;
  --health-start: #16a34a;
  --health-end: #22c55e;
  --energy-start: #3b82f6;
  --energy-end: #22d3ee;
  --glow: 0 10px 30px rgba(0, 0, 0, 0.35);
}

* {
  box-sizing: border-box;
  margin: 0;
  font-family: "Inter", system-ui, -apple-system, Segoe UI, Roboto, Helvetica,
    Arial, sans-serif;
  touch-action: manipulation;
}

body {
  background: radial-gradient(
      1200px 800px at 80% -20%,
      #1a2230 0%,
      transparent 70%
    ),
    radial-gradient(1000px 600px at -10% 110%, #0f1723 0%, transparent 70%),
    var(--bg);
  color: var(--text);
}

.gameContainer {
  display: flex;
  width: 100%;
  height: 100%;
  margin: 0;
  background-color: black;
  align-items: center;
  justify-content: center;
}

.statusBar {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  display: flex;
  align-items: center;
  width: 100%;
  padding: 16px 24px;
  backdrop-filter: blur(10px) saturate(120%);
  background: linear-gradient(180deg, rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.35));
  border-bottom: 1px solid var(--panel-border);
  box-shadow: 0 6px 24px rgba(0, 0, 0, 0.35);
}

.statusBarContainer {
  display: flex;
  flex-direction: column;
  width: 100%;
  align-items: flex-start;
  gap: 10px;
}

.healthBar {
  background: rgba(0, 0, 0, 0.18);
  height: 16px;
  width: 100%;
  border-radius: 999px;
  border: 1px solid var(--panel-border);
  box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.4);
  backdrop-filter: blur(4px);
}

.healthLevel {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 100%;
  border-radius: 999px;
  box-shadow: 0 0 12px rgba(34, 197, 94, 0.5);
  transition: width 250ms ease;
}
.healthLevel.fill-left {
  left: 0;
  right: auto;
  background: linear-gradient(90deg, var(--health-start), var(--health-end));
}
.healthLevel.fill-right {
  right: 0;
  left: auto;
  background: linear-gradient(270deg, var(--health-start), var(--health-end));
}

.energyBarBox {
  position: relative;
  height: 16px;
  width: 50%;
  display: flex;
  justify-content: flex-start;
}

.energyBar {
  background: rgba(0, 0, 0, 0.18);
  height: 16px;
  width: 100%;
  border-radius: 999px;
  border: 1px solid var(--panel-border);
  box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.4);
  backdrop-filter: blur(4px);
}

.energyLevel {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 16px;
  border-radius: 999px;
  box-shadow: 0 0 12px rgba(59, 130, 246, 0.45);
  transition: width 250ms ease;
}
.energyLevel.fill-left {
  left: 0;
  right: auto;
  background: linear-gradient(90deg, var(--energy-start), var(--energy-end));
}
.energyLevel.fill-right {
  right: 0;
  left: auto;
  background: linear-gradient(270deg, var(--energy-start), var(--energy-end));
}

.energyBarContainer {
  position: relative;
  height: 16px;
  width: 100%;
  display: flex;
  justify-content: flex-end;
}

.health {
  background-color: yellow;
}

.timer {
  height: 90px;
  width: 90px;
  flex-shrink: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 40px;
  font-weight: 800;
  color: var(--text);
  border-radius: 999px;
  background: linear-gradient(
    180deg,
    rgba(255, 255, 255, 0.06),
    rgba(255, 255, 255, 0.02)
  );
  border: 1px solid var(--panel-border);
  box-shadow: inset 0 0 40px rgba(139, 92, 246, 0.35),
    0 10px 30px rgba(0, 0, 0, 0.35);
  text-shadow: 0 2px 10px rgba(0, 0, 0, 0.8);
}

.postGameContainer {
  position: absolute;
  color: var(--text);
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  width: 100%;
  font-size: 50px;
  flex-direction: column;
  z-index: 100;
}

.overlay {
  position: absolute;
  height: 100%;
  z-index: 50;
  width: 100%;
  background-color: rgba(0, 0, 0, 0.8);
}

#gameBox {
  position: relative;
  display: inline-block;
}

#result {
  margin: 3rem;
  color: var(--text);
  z-index: 100;
  text-transform: capitalize;
  text-shadow: 0 6px 20px rgba(0, 0, 0, 0.6);
}

.container {
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

.btn {
  padding: 0.875rem 1.25rem;
  color: var(--text);
  border-radius: 12px;
  background: linear-gradient(
    90deg,
    rgba(139, 92, 246, 0.3),
    rgba(110, 231, 255, 0.25)
  );
  border: 1px solid var(--panel-border);
  box-shadow: var(--glow);
  margin: 2rem;
  transition: transform 120ms ease, box-shadow 200ms ease;
}
.btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 12px 36px rgba(0, 0, 0, 0.4);
}

.text-center {
  text-align: center;
}

a {
  text-decoration: none;
  color: black;
}

#countdown {
  position: absolute;
  left: 50%;
  top: 50%;
  display: inline-block;
  transform: translate(-50%, -50%);
  transition: 1s;
  font-size: 0;
  font-weight: bolder;
  opacity: 50%;
  color: yellow;
  font-size: 0rem;
}

#message {
  position: absolute;
  left: 50%;
  top: 50%;
  display: inline-block;
  transform: translate(-50%, -50%);
  font-weight: bolder;
}

#countdownBox {
  background-color: rgba(0, 0, 0, 0.8);
  height: 100%;
  width: 100%;
  position: absolute;
}

.code {
  background-color: cadetblue;
  color: rgb(0, 0, 0);
  padding: 1rem;
  margin-top: 1rem;
  margin-bottom: 1rem;
  text-decoration: none;
  border-bottom-left-radius: 1rem;
  border-top-left-radius: 1rem;
  border: solid;
}

.code:hover {
  color: yellow;
}

transition {
  transform: scale(1.2);
}

.heading {
  color: white;
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.join {
  background-color: rgb(9, 107, 61);
  border-top-right-radius: 1rem;
  border-bottom-right-radius: 1rem;
  color: white;
  border-style: solid;
  padding: 1rem;
  transition: transform 0.2s;
}

.join:hover {
  transform: scale(1.1);
  border-color: yellow;
}

.codeInput {
  padding: 1rem;
  border-top-left-radius: 1rem;
  border-bottom-left-radius: 1rem;
  border-style: solid;
  border-color: black;
}

.error {
  color: red;
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.controlsContainer {
  position: absolute;
  width: 100%;
  z-index: 2;
  display: flex;
  flex-direction: row;
}

.controlsRow {
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

.controlsContainer.left-handed .controlsRow {
  flex-direction: row-reverse;
}

.controlsColumn {
  display: flex;
  margin: 1rem;
  justify-content: space-around;
  align-items: center;
  flex-direction: column;
}

.innerControlsRow {
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  align-items: center;
}

.controlBtn {
  height: 5rem;
  width: 5rem;
  border-radius: 100%;
  background: linear-gradient(
    180deg,
    rgba(255, 255, 255, 0.06),
    rgba(255, 255, 255, 0.02)
  );
  display: flex;
  justify-content: center;
  align-items: center;
  border: 1px solid var(--panel-border);
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.35);
  backdrop-filter: blur(8px);
  touch-action: manipulation;
  transition: transform 120ms ease, box-shadow 200ms ease;
}
.controlBtn:active {
  transform: scale(0.96);
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3);
}

.attack2Row {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
}

.attack2Btn {
  height: 4rem;
  width: 4rem;
  border-radius: 100%;
  background: linear-gradient(
    180deg,
    rgba(255, 255, 255, 0.06),
    rgba(255, 255, 255, 0.02)
  );
  color: var(--text);
  border: 1px solid var(--panel-border);
  display: flex;
  justify-content: center;
  align-items: center;
  touch-action: manipulation;
  margin-right: 2rem;
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.35);
  transition: transform 120ms ease, box-shadow 200ms ease;
}
.attack2Btn:active {
  transform: scale(0.96);
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3);
}

.attack1Btn {
  height: 7rem;
  width: 7rem;
  border-radius: 100%;
  background: linear-gradient(
    180deg,
    rgba(255, 255, 255, 0.06),
    rgba(255, 255, 255, 0.02)
  );
  color: var(--text);
  border: 1px solid var(--panel-border);
  display: flex;
  justify-content: center;
  align-items: center;
  touch-action: manipulation;
  box-shadow: 0 6px 24px rgba(0, 0, 0, 0.4);
  transition: transform 120ms ease, box-shadow 200ms ease;
}
.attack1Btn:active {
  transform: scale(0.96);
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3);
}

.btnLogo {
  object-fit: contain;
  height: 4.5rem;
  text-align: center;
  opacity: 0.9;
  pointer-events: none;
}

.blockLogo {
  object-fit: contain;
  height: 3rem;
  text-align: center;
  opacity: 0.9;
  pointer-events: none;
}

.attack2Logo {
  object-fit: contain;
  height: 3rem;
  text-align: center;
  opacity: 0.9;
  pointer-events: none;
}

.attack1Logo {
  object-fit: contain;
  height: 4.5rem;
  text-align: center;
  opacity: 0.9;
  pointer-events: none;
}

/* Mobile styles - hide controls and scroll background on small screens */
@media (max-width: 768px) {
  .controlsBox {
    background-image: none !important;
    padding: 2rem !important;
    background: rgba(255, 255, 255, 0.06) !important;
    border: 1px solid rgba(255, 255, 255, 0.12);
    border-radius: 14px;
  }

  #controls {
    display: none !important;
  }

  /* Hide browser UI elements in fullscreen */
  @media screen and (display-mode: fullscreen) {
    body {
      overflow: hidden !important;
      position: fixed !important;
      width: 100vw !important;
      height: 100vh !important;
    }

    .gameContainer {
      width: 100vw !important;
      height: 100vh !important;
    }

    canvas {
      width: 100vw !important;
      height: 100vh !important;
    }
  }

  /* Optimize for mobile fullscreen */
  @media screen and (max-height: 600px) {
    .statusBar {
      padding: 8px 16px;
    }

    .timer {
      height: 60px;
      width: 60px;
      font-size: 28px;
    }

    .controlsContainer {
      bottom: 10px;
    }
  }
}

/* Additional mobile optimizations */
@media (max-width: 768px) {
  .gameContainer {
    width: 100vw !important;
    height: 100vh !important;
    overflow: hidden;
  }

  canvas {
    width: 100vw !important;
    height: 100vh !important;
    object-fit: cover;
  }

  /* Ensure status bar doesn't overlap with system UI */
  .statusBar {
    padding-top: max(16px, env(safe-area-inset-top));
    padding-left: max(24px, env(safe-area-inset-left));
    padding-right: max(24px, env(safe-area-inset-right));
  }

  /* Adjust controls for safe areas */
  .controlsContainer {
    padding-bottom: max(1rem, env(safe-area-inset-bottom));
  }
}

/* Landscape mode optimizations */
@media (max-width: 768px) and (orientation: landscape) {
  /* Full screen utilization in landscape */
  .gameContainer {
    width: 100vw !important;
    height: 100vh !important;
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    right: 0 !important;
    bottom: 0 !important;
  }

  canvas {
    width: 100vw !important;
    height: 100vh !important;
    object-fit: cover;
  }

  /* Optimize status bar for landscape */
  .statusBar {
    padding: 8px 16px;
    height: auto;
    min-height: 60px;
  }

  .statusBarContainer {
    flex-direction: row !important;
    align-items: center !important;
    justify-content: space-between !important;
    width: 100%;
  }

  /* Make timer smaller in landscape */
  .timer {
    height: 50px !important;
    width: 50px !important;
    font-size: 24px !important;
    flex-shrink: 0;
  }

  /* Optimize health/energy bars for landscape */
  .healthBar,
  .energyBar {
    height: 12px !important;
    min-width: 120px;
  }

  .energyBarBox {
    width: 120px !important;
  }

  /* Reposition controls for landscape */
  .controlsContainer {
    position: fixed !important;
    bottom: 10px !important;
    left: 10px !important;
    right: 10px !important;
    z-index: 10;
  }

  .controlsRow {
    justify-content: space-around !important;
    gap: 10px;
  }

  /* Make control buttons smaller in landscape */
  .controlBtn {
    height: 4rem !important;
    width: 4rem !important;
  }

  .attack1Btn {
    height: 5rem !important;
    width: 5rem !important;
  }

  .attack2Btn {
    height: 3rem !important;
    width: 3rem !important;
  }

  /* Adjust button logos for smaller buttons */
  .btnLogo {
    height: 3rem !important;
  }

  .attack1Logo {
    height: 3.5rem !important;
  }

  .attack2Logo {
    height: 2.5rem !important;
  }

  .blockLogo {
    height: 2.5rem !important;
  }

  /* Optimize post-game elements for landscape */
  .postGameContainer {
    padding: 1rem;
  }

  #result {
    margin: 1rem;
    font-size: 1.5rem;
  }

  .btn {
    margin: 1rem;
    padding: 0.75rem 1rem;
    font-size: 1rem;
  }

  /* Optimize countdown for landscape */
  #countdownBox {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  #countdown {
    font-size: 4rem !important;
  }

  .countdown-number {
    font-size: 6rem !important;
  }

  .countdown-fight {
    font-size: 4rem !important;
  }

  /* Ensure proper z-index layering */
  .statusBar {
    z-index: 20;
  }

  .controlsContainer {
    z-index: 15;
  }
}

/* Ultra-wide landscape optimization */
@media (max-width: 768px) and (orientation: landscape) and (min-aspect-ratio: 2/1) {
  .statusBar {
    padding: 6px 12px;
  }

  .timer {
    height: 45px !important;
    width: 45px !important;
    font-size: 20px !important;
  }

  .controlsContainer {
    bottom: 5px !important;
    left: 5px !important;
    right: 5px !important;
  }

  .controlBtn {
    height: 3.5rem !important;
    width: 3.5rem !important;
  }

  .attack1Btn {
    height: 4.5rem !important;
    width: 4.5rem !important;
  }

  .attack2Btn {
    height: 2.5rem !important;
    width: 2.5rem !important;
  }
}

/* Additional landscape optimizations */
@media (max-width: 768px) and (orientation: landscape) {
  /* Ensure canvas covers entire screen */
  canvas {
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    width: 100vw !important;
    height: 100vh !important;
    object-fit: cover !important;
  }

  /* Optimize status bar layout for landscape */
  .statusBar {
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    right: 0 !important;
    z-index: 20;
    background: linear-gradient(180deg, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.4));
  }

  /* Ensure controls don't overlap with status bar */
  .controlsContainer {
    position: fixed !important;
    bottom: 0 !important;
    left: 0 !important;
    right: 0 !important;
    z-index: 15;
    background: linear-gradient(0deg, rgba(0, 0, 0, 0.3), transparent);
    padding: 10px 0;
  }

  /* Optimize health bar layout */
  .healthBar,
  .energyBar {
    min-width: 100px;
    max-width: 150px;
  }

  /* Ensure proper spacing between elements */
  .statusBarContainer {
    gap: 8px;
  }

  /* Make sure post-game elements are visible */
  .postGameContainer {
    position: fixed !important;
    top: 50% !important;
    left: 50% !important;
    transform: translate(-50%, -50%) !important;
    z-index: 30;
    background: rgba(0, 0, 0, 0.8);
    border-radius: 12px;
    padding: 20px;
  }

  /* Optimize countdown positioning */
  #countdownBox {
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    right: 0 !important;
    bottom: 0 !important;
    z-index: 40;
  }
}

/* Mobile canvas sizing to prevent character cutoff */
@media (max-width: 768px) {
  .gameContainer {
    width: 100vw !important;
    height: 100vh !important;
    overflow: hidden;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
  }

  canvas {
    max-width: 100vw !important;
    max-height: 100vh !important;
    width: auto !important;
    height: auto !important;
    object-fit: contain !important;
    display: block !important;
    margin: 0 auto !important;
  }

  /* Ensure status bar doesn't overlap with system UI */
  .statusBar {
    padding-top: max(16px, env(safe-area-inset-top));
    padding-left: max(24px, env(safe-area-inset-left));
    padding-right: max(24px, env(safe-area-inset-right));
  }

  /* Adjust controls for safe areas */
  .controlsContainer {
    padding-bottom: max(1rem, env(safe-area-inset-bottom));
  }
}

.hidden {
  display: none;
}
